#include <Arduino.h>
#include "GC_display.h"
#include <TFT_eSPI.h> // Hardware-specific library

//if you want to use DEBUG_DISPLAY, make sure the corresponding pin is free
//#define DEBUG_DISPLAY

uint8_t display_OUT_buffer[DISPLAY_OUT_BUFFER_SIZE];

TFT_eSPI tft = TFT_eSPI();       // Invoke custom library

uint8_t cnt=0;

uint16_t igt[64*4]={0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,
0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,0x5555,};
uint16_t igt2[64*4]={
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,
0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,0x9999,};

void updateDisplay(){
  #ifdef DEBUG_DISPLAY
    pd=!pd;digitalWrite(0,pd);
  #endif

  //SPI.begin();
  SPI.beginTransaction(SPISettings(12000000, MSBFIRST, SPI_MODE0));
  pinMode(DISPLAY_DC_PIN,OUTPUT);//disable special function
  //same as pinMode(DISPLAY_DC_PIN,OUTPUT); but faster
  
  
  //tft.fillScreen(cnt);
  tft.setSwapBytes(true);
    tft.pushImage(25+cnt/2, 120, 16, 16, igt2);
  cnt++;
    tft.pushImage(25+cnt/2, 120, 16, 16, igt);

  GPOS = (1<<DISPLAY_CS_PIN);
  
  #ifdef DEBUG_DISPLAY
    delayMicroseconds(300);
  #endif
}

void initializeDisplay(){
  tft.init();
  delay(5);
  tft.setRotation(0);
  tft.fillScreen(TFT_RED);
  tft.writecommand(0x29);
  digitalWrite(DISPLAY_CS_PIN,HIGH);
}
